// ÁÆÄÂåñÁöÑÂêàÁ∫¶ÈÉ®ÁΩ≤ËÑöÊú¨
// ‰ΩøÁî®ÊñπÊ≥ï: node deploy-simple.js

const { ethers } = require("hardhat");

async function main() {
    console.log("üöÄ ÂºÄÂßãÈÉ®ÁΩ≤ConfidentialVotingÂêàÁ∫¶...");
    
    // Ëé∑ÂèñÈÉ®ÁΩ≤Ë¥¶Êà∑
    const [deployer] = await ethers.getSigners();
    console.log("üìç ÈÉ®ÁΩ≤Ë¥¶Êà∑:", deployer.address);
    
    // Ê£ÄÊü•Ë¥¶Êà∑‰ΩôÈ¢ù
    const balance = await deployer.getBalance();
    console.log("üí∞ Ë¥¶Êà∑‰ΩôÈ¢ù:", ethers.utils.formatEther(balance), "ETH");
    
    if (balance.lt(ethers.utils.parseEther("0.01"))) {
        console.log("‚ùå ‰ΩôÈ¢ù‰∏çË∂≥ÔºåÈúÄË¶ÅËá≥Â∞ë0.01 ETHÁî®‰∫éÈÉ®ÁΩ≤");
        return;
    }
    
    // ÈÉ®ÁΩ≤ÂêàÁ∫¶
    console.log("üìú ÂºÄÂßãÁºñËØëÂíåÈÉ®ÁΩ≤ÂêàÁ∫¶...");
    const ConfidentialVoting = await ethers.getContractFactory("ConfidentialVoting");
    
    // ËÆæÁΩÆgasÂèÇÊï∞
    const deployOptions = {
        gasLimit: 5000000,
        gasPrice: ethers.utils.parseUnits("20", "gwei")
    };
    
    console.log("‚è≥ Ê≠£Âú®ÈÉ®ÁΩ≤ÂêàÁ∫¶...");
    const contract = await ConfidentialVoting.deploy(deployOptions);
    
    console.log("‚è≥ Á≠âÂæÖ‰∫§ÊòìÁ°ÆËÆ§...");
    await contract.deployed();
    
    console.log("‚úÖ ÂêàÁ∫¶ÈÉ®ÁΩ≤ÊàêÂäü!");
    console.log("üìç ÂêàÁ∫¶Âú∞ÂùÄ:", contract.address);
    console.log("üîó ‰∫§ÊòìÂìàÂ∏å:", contract.deployTransaction.hash);
    console.log("üåê Âå∫ÂùóÈìæÊµèËßàÂô®:", `https://sepolia.etherscan.io/address/${contract.address}`);
    
    // È™åËØÅÂêàÁ∫¶
    console.log("üîç È™åËØÅÂêàÁ∫¶ÂäüËÉΩ...");
    try {
        const owner = await contract.owner();
        console.log("üëë ÂêàÁ∫¶ÁÆ°ÁêÜÂëò:", owner);
        console.log("‚úÖ ÂêàÁ∫¶ÂäüËÉΩÈ™åËØÅÊàêÂäü");
    } catch (error) {
        console.log("‚ö†Ô∏è ÂêàÁ∫¶ÂäüËÉΩÈ™åËØÅÂ§±Ë¥•:", error.message);
    }
    
    console.log("\nüéâ ÈÉ®ÁΩ≤ÂÆåÊàê!");
    console.log("üìã ËØ∑Â∞Ü‰ª•‰∏ãÂêàÁ∫¶Âú∞ÂùÄÂ§çÂà∂Âà∞ÂâçÁ´ØÂ∫îÁî®‰∏≠:");
    console.log("üîó", contract.address);
}

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error("‚ùå ÈÉ®ÁΩ≤Â§±Ë¥•:", error);
        process.exit(1);
    }); 